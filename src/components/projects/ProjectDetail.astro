---
import type { IProject } from "@types";

type Props = IProject & { lazyLoadImg: boolean };

const {
  title,
  image,
  deploymentUrl,
  githubUrl,
  description,
  environment,
  lazyLoadImg,
} = Astro.props;
---

{
  /** todo: image optimization https://docs.astro.build/en/guides/integrations-guide/image/#installation */
}

<article id={title}>
  <section class="grid gap-x-16 md:grid-cols-2">
    {/** order-last puts image on right hand side instead of left */}
    <div class="md:order-last">
      <div class="group relative max-h-[25rem] w-full overflow-hidden">
        <div class="absolute right-4 top-4 z-10 flex items-center">
          {
            githubUrl && (
              <a
                href={githubUrl}
                class="rounded-full bg-black/50 p-3 text-white backdrop-blur-md"
                aria-label="Git Hub Link"
                target="_blank"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="feather feather-github"
                >
                  <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                </svg>
              </a>
            )
          }
          {
            deploymentUrl && (
              <a
                href={deploymentUrl}
                class="ml-1 rounded-full bg-black/50 p-3 text-white backdrop-blur-md"
                aria-label="Project Link"
                target="_blank"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="feather feather-link-2"
                >
                  <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3" />
                  <line x1="8" y1="12" x2="16" y2="12" />
                </svg>
              </a>
            )
          }
        </div>
        <img
          src={image}
          class="h-auto w-full scale-100 transition duration-[1.5s] hover:scale-110"
          loading={lazyLoadImg ? "lazy" : undefined}
          width="100%"
          height="100%"
          alt="featureImage"
        />
      </div>
    </div>

    <div>
      <h2 class="mt-6 dark:text-light md:m-0">{title}</h2>

      {
        environment && (
          <div class="my-6 flex max-w-lg flex-wrap gap-x-1.5 gap-y-2 text-sm dark:text-light">
            {environment.map((item) => (
              <div class="inline-block rounded-full bg-slate-200 px-4 py-1.5 text-darkblue dark:bg-[#202020] dark:text-blue">
                {item}
              </div>
            ))}
          </div>
        )
      }

      <ul class="mt-3 ml-6 text-lg leading-relaxed xl:ml-0">
        {
          description.map((item, index, arr) => {
            const isLast = index === arr.length - 1;
            return (
              <li
                class:list={[
                  "max-w-lg list-disc dark:text-gray",
                  { "mb-6": !isLast },
                ]}
              >
                <div>{item}</div>
              </li>
            );
          })
        }
      </ul>
    </div>
  </section>
</article>
