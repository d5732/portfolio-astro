---
import { info } from "@data";
import { createLogo } from "@utils";
import MobileMenu from "./MobileMenu.astro";
---

<header
  class="container relative z-20 flex h-[80px] items-center justify-between bg-inherit sm:h-[123px]"
>
  <a
    class="font-outfit text-2xl font-semibold dark:font-semibold dark:text-light"
    href="/"
    >{createLogo(info.name)}.
  </a>
  <nav>
    <ul class="flex items-center">
      {
        info.pages.map((item) => (
          <li>
            <a
              class="hidden p-4 text-lg dark:text-light sm:block"
              href={`/${item}`}
            >
              {item.charAt(0).toUpperCase() + item.slice(1)}
            </a>
          </li>
        ))
      }
      <li>
        <button
          aria-label="theme-button"
          id="theme-button"
          class="ml-2 rounded-lg bg-slate-200 p-4 dark:bg-[#202020] dark:text-light"
        ></button>
      </li>
      <li>
        <button
          aria-label="mobile-menu-button"
          id="mobile-menu-button"
          class="ml-2 block rounded-lg bg-slate-200 p-4 text-lg dark:bg-[#202020] dark:text-light sm:hidden"
        >
          <svg
            id="mobile-menu-button-expand"
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-menu"
            ><line x1="3" y1="12" x2="21" y2="12"></line><line
              x1="3"
              y1="6"
              x2="21"
              y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg
          >
          <svg
            id="mobile-menu-button-collapse"
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-x hidden"
            ><line x1="18" y1="6" x2="6" y2="18"></line><line
              x1="6"
              y1="6"
              x2="18"
              y2="18"></line></svg
          >
        </button>
      </li>
    </ul>
  </nav>
</header>
<MobileMenu />

<script>
  let currentTheme;
  // Get saved theme
  currentTheme = (["dark", "light"] as const).find(
    (theme) => localStorage.getItem("theme") === theme
  );
  // Otherwise, initialize theme based on system preference
  currentTheme ??= window.matchMedia("(prefers-color-scheme: dark)").matches
    ? ("dark" as const)
    : ("light" as const);

  const browserTheme = document.querySelector(
    '[name="theme-color"]'
  ) as HTMLMetaElement;
  const themeButton = document.getElementById("theme-button")!;
  const moon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-moon"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>`;
  const sun = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-sun"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>`;

  const handleThemeChange = () => {
    if (currentTheme === "dark") {
      browserTheme.content = "#111111";
      themeButton.innerHTML = sun;
      document.documentElement.setAttribute("data-theme", "dark");
      localStorage.theme = "dark";
    } else {
      browserTheme.content = "#FFFFFF";
      themeButton.innerHTML = moon;
      document.documentElement.setAttribute("data-theme", "light");
      localStorage.theme = "light";
    }
  };

  handleThemeChange();

  themeButton.addEventListener("click", handleThemeChange);
</script>
